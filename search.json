[{"path":"https://evandeilton.github.io/OptimalBinningWoE/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 OptimalBinningWoE authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"First Last. Author, maintainer.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Last F (2024). OptimalBinningWoE: Package (One Line, Title Case). R package version 0.1.0, https://evandeilton.github.io/OptimalBinningWoE/.","code":"@Manual{,   title = {OptimalBinningWoE: What the Package Does (One Line, Title Case)},   author = {First Last},   year = {2024},   note = {R package version 0.1.0},   url = {https://evandeilton.github.io/OptimalBinningWoE/}, }"},{"path":"https://evandeilton.github.io/OptimalBinningWoE/index.html","id":"optimalbinningwoe","dir":"","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"O pacote OptimalBinningWoE oferece uma implementação robusta e flexível de binning ótimo e cálculo de Weight Evidence (WoE) para análise de dados e modelagem preditiva. Este pacote é particularmente útil para preparação de dados em modelos de credit scoring, mas pode ser aplicado em diversos contextos de modelagem estatística.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/index.html","id":"instalação","dir":"","previous_headings":"","what":"Instalação","title":"What the Package Does (One Line, Title Case)","text":"Você pode instalar versão em desenvolvimento OptimalBinningWoE GitHub com:","code":"# install.packages(\"devtools\") devtools::install_github(\"seu_usuario/OptimalBinningWoE\")"},{"path":"https://evandeilton.github.io/OptimalBinningWoE/index.html","id":"visão-geral","dir":"","previous_headings":"","what":"Visão Geral","title":"What the Package Does (One Line, Title Case)","text":"O OptimalBinningWoE oferece seguintes funcionalidades principais: Binning ótimo para variáveis categóricas e numéricas Cálculo de Weight Evidence (WoE) Seleção automática melhor método de binning Pré-processamento de dados, incluindo tratamento de valores ausentes e outliers","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/index.html","id":"algoritmos-suportados","dir":"","previous_headings":"","what":"Algoritmos Suportados","title":"What the Package Does (One Line, Title Case)","text":"O OptimalBinningWoE suporta os seguintes algoritmos de binning: CAIM (Class-Attribute Interdependence Maximization): Aplicável variáveis categóricas e numéricas. ChiMerge: Aplicável variáveis categóricas e numéricas. MDLP (Minimum Description Length Principle): Aplicável variáveis categóricas e numéricas. MIP (Minimum Information Pure): Aplicável variáveis categóricas e numéricas. MOB (Monotone Optimal Binning): Aplicável variáveis categóricas e numéricas. IV (Information Value): Aplicável apenas variáveis categóricas. PAVA (Pool Adjacent Violators Algorithm): Aplicável apenas variáveis numéricas. Tree-based binning: Aplicável apenas variáveis numéricas. Cada algoritmo tem suas próprias forças e pode performar diferentemente dependendo da natureza dos dados. opção de seleção automática de método testa os algoritmos aplicáveis e escolhe o que produz o maior Information Value.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/index.html","id":"parâmetros-de-controle","dir":"","previous_headings":"","what":"Parâmetros de Controle","title":"What the Package Does (One Line, Title Case)","text":"O pacote oferece diversos parâmetros de controle para ajustar o comportamento binning e pré-processamento: min_bads: Proporção mínima de casos “ruins” em cada bin (padrão: 0.05) pvalue_threshold: Limiar de p-valor para testes estatísticos (padrão: 0.05) max_n_prebins: Número máximo de pré-bins antes da otimização (padrão: 20) monotonicity_direction: Direção da monotonia (“increase” ou “decrease”) (padrão: “increase”) lambda: Parâmetro de regularização para métodos baseados em árvore (padrão: 0.1) min_bin_size: Proporção mínima de casos em cada bin (padrão: 0.05) min_iv_gain: Ganho mínimo de IV para criar uma nova divisão (padrão: 0.01) max_depth: Profundidade máxima para métodos baseados em árvore (padrão: 10) num_miss_value: Valor para representar valores numéricos ausentes (padrão: -999.0) char_miss_value: Valor para representar valores categóricos ausentes (padrão: “N/”) outlier_method: Método para detecção de outliers (“iqr”, “zscore”, ou “grubbs”) (padrão: “iqr”) outlier_process: Se deve processar outliers (padrão: FALSE) iqr_k: Fator para o método IQR (padrão: 1.5) zscore_threshold: Limiar para o método Z-score (padrão: 3) grubbs_alpha: Nível de significância para o teste de Grubbs (padrão: 0.05)","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/index.html","id":"exemplos-de-uso","dir":"","previous_headings":"","what":"Exemplos de uso","title":"What the Package Does (One Line, Title Case)","text":"","code":"library(OptimalBinningWoE) library(data.table) library(scorecard) library(janitor)  # Carregar os dados data(\"germancredit\") dt <- as.data.table(germancredit) %>%    janitor::clean_names()  # Definir a variável target dt[, default := ifelse(creditability == \"bad\", 1, 0)] dt$creditability <- NULL  # Executar OptimalBinningWoE com seleção automática de método result <- OptimalBinningWoE(dt, target = \"default\", method = \"auto\")  # Visualizar resultados head(result$woe_feature) head(result$woe_woebins) head(result$prep_report)"},{"path":[]},{"path":"https://evandeilton.github.io/OptimalBinningWoE/index.html","id":"id_1-binning-de-variável-numérica-com-método-específico","dir":"","previous_headings":"Exemplos Detalhados","what":"1. Binning de variável numérica com método específico","title":"What the Package Does (One Line, Title Case)","text":"","code":"# Usando o método MDLP para a variável 'age_in_years' numeric_result <- OptimalBinningWoE(dt, target = \"default\", feature = \"age_in_years\", method = \"mdlp\") print(numeric_result$woe_woebins)"},{"path":"https://evandeilton.github.io/OptimalBinningWoE/index.html","id":"id_2-binning-de-variável-categórica","dir":"","previous_headings":"Exemplos Detalhados","what":"2. Binning de variável categórica","title":"What the Package Does (One Line, Title Case)","text":"","code":"# Usando o método ChiMerge para a variável 'purpose' categorical_result <- OptimalBinningWoE(dt, target = \"default\", feature = \"purpose\", method = \"chimerge\") print(categorical_result$woe_woebins)"},{"path":"https://evandeilton.github.io/OptimalBinningWoE/index.html","id":"id_3-tratamento-de-valores-ausentes-no-pré-processamento","dir":"","previous_headings":"Exemplos Detalhados","what":"3. Tratamento de valores ausentes no pré-processamento","title":"What the Package Does (One Line, Title Case)","text":"Para este exemplo, vamos adicionar alguns valores ausentes artificialmente:","code":"# Adicionar valores ausentes set.seed(123) dt[sample(1:nrow(dt), 50), age_in_years := NA] dt[sample(1:nrow(dt), 30), credit_amount := NA]  # Executar OptimalBinningWoE com pré-processamento result_with_missing <- OptimalBinningWoE(dt, target = \"default\", feature = c(\"age_in_years\", \"credit_amount\"),                                           preprocess = TRUE,                                          control = list(num_miss_value = -999, char_miss_value = \"MISSING\"))  # Verificar o relatório de pré-processamento print(result_with_missing$prep_report)"},{"path":"https://evandeilton.github.io/OptimalBinningWoE/index.html","id":"id_4-tratamento-de-outliers","dir":"","previous_headings":"Exemplos Detalhados","what":"4. Tratamento de outliers","title":"What the Package Does (One Line, Title Case)","text":"","code":"# Adicionar alguns outliers aos dados dt[sample(1:nrow(dt), 10), credit_amount := rnorm(10, mean = 100000, sd = 10000)]  # Executar OptimalBinningWoE com tratamento de outliers result_with_outliers <- OptimalBinningWoE(dt, target = \"default\", feature = \"credit_amount\", preprocess = TRUE,                                           control = list(outlier_method = \"iqr\", outlier_process = TRUE))  # Verificar o relatório de pré-processamento print(result_with_outliers$prep_report)"},{"path":"https://evandeilton.github.io/OptimalBinningWoE/index.html","id":"id_5-comparação-de-diferentes-métodos","dir":"","previous_headings":"Exemplos Detalhados","what":"5. Comparação de diferentes métodos","title":"What the Package Does (One Line, Title Case)","text":"","code":"methods <- c(\"caim\", \"chimerge\", \"mdlp\", \"mip\", \"mob\") results <- list()  for (method in methods) {   results[[method]] <- OptimalBinningWoE(dt, target = \"default\", feature = \"duration_in_month\", method = method) }  # Comparar o número de bins e IV total para cada método comparison <- data.frame(   Method = methods,   Num_Bins = sapply(results, function(x) nrow(x$woe_woebins)),   Total_IV = sapply(results, function(x) sum(x$woe_woebins$iv)) )  print(comparison)"},{"path":"https://evandeilton.github.io/OptimalBinningWoE/index.html","id":"id_6-processamento-de-múltiplas-variáveis","dir":"","previous_headings":"Exemplos Detalhados","what":"6. Processamento de múltiplas variáveis","title":"What the Package Does (One Line, Title Case)","text":"","code":"# Selecionar múltiplas features para processamento selected_features <- c(\"age_in_years\", \"credit_amount\", \"duration_in_month\", \"present_residence_since\", \"number_of_existing_credits_at_this_bank\")  # Executar OptimalBinningWoE para múltiplas features multi_feature_result <- OptimalBinningWoE(dt, target = \"default\", feature = selected_features, method = \"auto\")  # Visualizar resultados resumidos summary_results <- data.frame(   Feature = selected_features,   Num_Bins = sapply(multi_feature_result$woe_woebins, function(x) nrow(x)),   Total_IV = sapply(multi_feature_result$woe_woebins, function(x) sum(x$iv)) )  print(summary_results)"},{"path":"https://evandeilton.github.io/OptimalBinningWoE/index.html","id":"id_7-análise-de-uma-variável-ordinal","dir":"","previous_headings":"Exemplos Detalhados","what":"7. Análise de uma variável ordinal","title":"What the Package Does (One Line, Title Case)","text":"Estes exemplos demonstram o uso OptimalBinningWoE com o conjunto de dados German Credit, incluindo: Uso de variáveis reais de um conjunto de dados de credit scoring. Tratamento de variáveis numéricas, categóricas e ordinais. Lidar com valores ausentes e outliers (artificialmente introduzidos para demonstração). Comparação de diferentes métodos de binning. Processamento de múltiplas variáveis simultaneamente. Análise específica de uma variável ordinal. Esta versão dos exemplos usa o conjunto de dados German Credit, que é um conjunto de dados real e amplamente utilizado em estudos de credit scoring. Os exemplos cobrem uma variedade de cenários e tipos de variáveis presentes neste conjunto de dados, proporcionando uma demonstração mais realista e relevante uso pacote OptimalBinningWoE.","code":"# Analisar a variável 'present_residence_since' ordinal_result <- OptimalBinningWoE(dt, target = \"default\", feature = \"present_residence_since\", method = \"mob\") print(ordinal_result$woe_woebins)"},{"path":"https://evandeilton.github.io/OptimalBinningWoE/index.html","id":"considerações-finais","dir":"","previous_headings":"","what":"Considerações Finais","title":"What the Package Does (One Line, Title Case)","text":"O pacote OptimalBinningWoE oferece uma solução abrangente para binning e cálculo de WoE, com suporte para diversos algoritmos e opções de pré-processamento. Ao usar este pacote, considere os seguintes pontos: seleção automática de método (method = \"auto\") pode ser útil quando você não tem certeza sobre qual algoritmo usar, mas pode ser computacionalmente intensiva para grandes conjuntos de dados. O pré-processamento de dados, incluindo o tratamento de valores ausentes e outliers, pode ter um impacto significativo nos resultados binning. Ajuste os parâmetros de controle conforme necessário para seu conjunto de dados específico. Diferentes métodos de binning podem produzir resultados significativamente diferentes. É uma boa prática comparar os resultados de vários métodos antes de fazer uma escolha final. Para conjuntos de dados muito grandes, considere usar uma amostra representativa para determinar os bins ótimos e depois aplicar esses bins ao conjunto de dados completo. O pacote fornece flexibilidade para lidar com diferentes tipos de dados e cenários de modelagem. Experimente diferentes configurações para encontrar melhor abordagem para seus dados específicos. Para mais detalhes sobre opções disponíveis e interpretação dos resultados, consulte documentação completa pacote.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/index.html","id":"contribuindo","dir":"","previous_headings":"","what":"Contribuindo","title":"What the Package Does (One Line, Title Case)","text":"Contribuições para o OptimalBinningWoE são bem-vindas! Por favor, consulte o arquivo CONTRIBUTING.md para diretrizes sobre como contribuir para este projeto.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/index.html","id":"licença","dir":"","previous_headings":"","what":"Licença","title":"What the Package Does (One Line, Title Case)","text":"Este projeto está licenciado sob Licença MIT - Veja o arquivo LICENSE.md para detalhes.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningCategoricalCAIM.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs optimal binning of a categorical variable for Weight of Evidence (WoE) and Information Value (IV) using the Class-Attribute Interdependence Maximization (CAIM) criterion — OptimalBinningCategoricalCAIM","title":"Performs optimal binning of a categorical variable for Weight of Evidence (WoE) and Information Value (IV) using the Class-Attribute Interdependence Maximization (CAIM) criterion — OptimalBinningCategoricalCAIM","text":"function processes categorical variable grouping rare categories, calculating event rates, iteratively merging bins maximize CAIM criterion. function also ensures monotonicity event rates calculates WoE IV generated bins.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningCategoricalCAIM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs optimal binning of a categorical variable for Weight of Evidence (WoE) and Information Value (IV) using the Class-Attribute Interdependence Maximization (CAIM) criterion — OptimalBinningCategoricalCAIM","text":"","code":"OptimalBinningCategoricalCAIM(   target,   feature,   min_bins = 2L,   max_bins = 7L,   cat_cutoff = 0.05,   min_bads = 0.05 )"},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningCategoricalCAIM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs optimal binning of a categorical variable for Weight of Evidence (WoE) and Information Value (IV) using the Class-Attribute Interdependence Maximization (CAIM) criterion — OptimalBinningCategoricalCAIM","text":"target Integer vector representing binary target variable, 1 indicates positive event (e.g., default) 0 indicates negative event (e.g., non-default). feature Character vector representing categorical variable binned. min_bins (Optional) Minimum number bins generate. Default 2. max_bins (Optional) Maximum number bins generate. Default 7. cat_cutoff (Optional) Frequency cutoff value, categories grouped \"\". Default 0.05. min_bads (Optional) Minimum proportion bad events bin must contain. Default 0.05.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningCategoricalCAIM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performs optimal binning of a categorical variable for Weight of Evidence (WoE) and Information Value (IV) using the Class-Attribute Interdependence Maximization (CAIM) criterion — OptimalBinningCategoricalCAIM","text":"list following elements: feature_woe: Numeric vector WoE assigned instance processed categorical variable. bin: DataFrame generated bins, containing following fields: bin: Names categories grouped bin. woe: Weight Evidence (WoE) bin. iv: Information Value (IV) bin. count: Total number observations bin. count_pos: Count positive events bin. count_neg: Count negative events bin. woe: Numeric vector WoE bin. iv: Total Information Value (IV) calculated variable. pos: Vector count positive events bin. neg: Vector count negative events bin.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningCategoricalChiMerge.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs optimal binning of a categorical variable for Weight of Evidence (WoE) and Information Value (IV) using the ChiMerge algorithm — OptimalBinningCategoricalChiMerge","title":"Performs optimal binning of a categorical variable for Weight of Evidence (WoE) and Information Value (IV) using the ChiMerge algorithm — OptimalBinningCategoricalChiMerge","text":"function processes categorical variable grouping rare categories, ordering event rate, applying ChiMerge algorithm merge categories bins based chi-square test independence. also ensures monotonicity event rates calculates WoE IV generated bins.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningCategoricalChiMerge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs optimal binning of a categorical variable for Weight of Evidence (WoE) and Information Value (IV) using the ChiMerge algorithm — OptimalBinningCategoricalChiMerge","text":"","code":"OptimalBinningCategoricalChiMerge(   target,   feature,   min_bins = 2L,   max_bins = 7L,   pvalue_threshold = 0.05,   cat_cutoff = 0.05,   min_bads = 0.05,   max_n_prebins = 20L )"},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningCategoricalChiMerge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs optimal binning of a categorical variable for Weight of Evidence (WoE) and Information Value (IV) using the ChiMerge algorithm — OptimalBinningCategoricalChiMerge","text":"target Integer vector representing binary target variable, 1 indicates positive event (e.g., default) 0 indicates negative event (e.g., non-default). feature Character vector representing categorical variable binned. min_bins (Optional) Minimum number bins generate. Default 2. max_bins (Optional) Maximum number bins generate. Default 7. pvalue_threshold (Optional) P-value threshold chi-square test used determine whether merge bins. Default 0.05. cat_cutoff (Optional) Frequency cutoff value, categories grouped \"\". Default 0.05. min_bads (Optional) Minimum proportion bad events bin must contain. Default 0.05. max_n_prebins (Optional) Maximum number pre-bins consider final binning. Default 20.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningCategoricalChiMerge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performs optimal binning of a categorical variable for Weight of Evidence (WoE) and Information Value (IV) using the ChiMerge algorithm — OptimalBinningCategoricalChiMerge","text":"list following elements: feature_woe: Numeric vector WoE assigned instance processed categorical variable. bin: DataFrame generated bins, containing following fields: bin: Names categories grouped bin. woe: Weight Evidence (WoE) bin. iv: Information Value (IV) bin. count: Total number observations bin. count_pos: Count positive events bin. count_neg: Count negative events bin. woe: Numeric vector WoE bin. iv: Total Information Value (IV) calculated variable. pos: Vector count positive events bin. neg: Vector count negative events bin.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningCategoricalIV.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs optimal binning of a categorical variable for Weight of Evidence (WoE) and Information Value (IV), ensuring monotonicity and maximizing IV — OptimalBinningCategoricalIV","title":"Performs optimal binning of a categorical variable for Weight of Evidence (WoE) and Information Value (IV), ensuring monotonicity and maximizing IV — OptimalBinningCategoricalIV","text":"function processes categorical variable grouping rare categories, calculating event rates, iteratively merging bins maximize Information Value (IV) ensuring monotonicity event rates. also calculates WoE IV generated bins.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningCategoricalIV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs optimal binning of a categorical variable for Weight of Evidence (WoE) and Information Value (IV), ensuring monotonicity and maximizing IV — OptimalBinningCategoricalIV","text":"","code":"OptimalBinningCategoricalIV(   target,   feature,   min_bins = 2L,   max_bins = 7L,   cat_cutoff = 0.05,   min_bads = 0.05 )"},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningCategoricalIV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs optimal binning of a categorical variable for Weight of Evidence (WoE) and Information Value (IV), ensuring monotonicity and maximizing IV — OptimalBinningCategoricalIV","text":"target Integer vector representing binary target variable, 1 indicates positive event (e.g., default) 0 indicates negative event (e.g., non-default). feature Character vector representing categorical variable binned. min_bins (Optional) Minimum number bins generate. Default 2. max_bins (Optional) Maximum number bins generate. Default 7. cat_cutoff (Optional) Frequency cutoff value, categories grouped \"\". Default 0.05. min_bads (Optional) Minimum proportion bad events bin must contain. Default 0.05.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningCategoricalIV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performs optimal binning of a categorical variable for Weight of Evidence (WoE) and Information Value (IV), ensuring monotonicity and maximizing IV — OptimalBinningCategoricalIV","text":"list following elements: feature_woe: Numeric vector WoE assigned instance processed categorical variable. bin: DataFrame generated bins, containing following fields: bin: Names categories grouped bin. woe: Weight Evidence (WoE) bin. iv: Information Value (IV) bin. count: Total number observations bin. count_pos: Count positive events bin. count_neg: Count negative events bin. woe: Numeric vector WoE bin. iv: Total Information Value (IV) calculated variable. pos: Vector count positive events bin. neg: Vector count negative events bin.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningCategoricalMDLP.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs optimal binning of a categorical variable for Weight of Evidence (WoE) and Information Value (IV) using the Minimum Description Length Principle (MDLP) criterion — OptimalBinningCategoricalMDLP","title":"Performs optimal binning of a categorical variable for Weight of Evidence (WoE) and Information Value (IV) using the Minimum Description Length Principle (MDLP) criterion — OptimalBinningCategoricalMDLP","text":"function processes categorical variable grouping rare categories, calculating event rates, iteratively merging bins using MDLP criterion maximize information gain. function also ensures monotonicity event rates calculates WoE IV generated bins.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningCategoricalMDLP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs optimal binning of a categorical variable for Weight of Evidence (WoE) and Information Value (IV) using the Minimum Description Length Principle (MDLP) criterion — OptimalBinningCategoricalMDLP","text":"","code":"OptimalBinningCategoricalMDLP(   target,   feature,   min_bins = 2L,   max_bins = 7L,   cat_cutoff = 0.05,   min_bads = 0.05 )"},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningCategoricalMDLP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs optimal binning of a categorical variable for Weight of Evidence (WoE) and Information Value (IV) using the Minimum Description Length Principle (MDLP) criterion — OptimalBinningCategoricalMDLP","text":"target Integer vector representing binary target variable, 1 indicates positive event (e.g., default) 0 indicates negative event (e.g., non-default). feature Character vector representing categorical variable binned. min_bins (Optional) Minimum number bins generate. Default 2. max_bins (Optional) Maximum number bins generate. Default 7. cat_cutoff (Optional) Frequency cutoff value, categories grouped \"\". Default 0.05. min_bads (Optional) Minimum proportion bad events bin must contain. Default 0.05.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningCategoricalMDLP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performs optimal binning of a categorical variable for Weight of Evidence (WoE) and Information Value (IV) using the Minimum Description Length Principle (MDLP) criterion — OptimalBinningCategoricalMDLP","text":"list following elements: feature_woe: Numeric vector WoE assigned instance processed categorical variable. bin: DataFrame generated bins, containing following fields: bin: Names categories grouped bin. woe: Weight Evidence (WoE) bin. iv: Information Value (IV) bin. count: Total number observations bin. count_pos: Count positive events bin. count_neg: Count negative events bin. woe: Numeric vector WoE bin. iv: Total Information Value (IV) calculated variable. pos: Vector count positive events bin. neg: Vector count negative events bin.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningCategoricalMIP.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs optimal binning of a categorical variable for Weight of Evidence (WoE) and Information Value (IV) — OptimalBinningCategoricalMIP","title":"Performs optimal binning of a categorical variable for Weight of Evidence (WoE) and Information Value (IV) — OptimalBinningCategoricalMIP","text":"function processes categorical variable grouping rare categories, ordering event rate, generating bins maximize WoE monotonicity. also calculates WoE IV generated bins.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningCategoricalMIP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs optimal binning of a categorical variable for Weight of Evidence (WoE) and Information Value (IV) — OptimalBinningCategoricalMIP","text":"","code":"OptimalBinningCategoricalMIP(   target,   feature,   cat_cutoff = 0.05,   min_bins = 2L,   max_bins = 5L )"},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningCategoricalMIP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs optimal binning of a categorical variable for Weight of Evidence (WoE) and Information Value (IV) — OptimalBinningCategoricalMIP","text":"target Integer vector representing binary target variable, 1 indicates positive event (e.g., default) 0 indicates negative event (e.g., non-default). feature Character vector representing categorical variable binned. cat_cutoff (Optional) Frequency cutoff value, categories grouped \"\". Default 0.05. min_bins (Optional) Minimum number bins generate. Default 2. max_bins (Optional) Maximum number bins generate. Default 5.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningCategoricalMIP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performs optimal binning of a categorical variable for Weight of Evidence (WoE) and Information Value (IV) — OptimalBinningCategoricalMIP","text":"list following elements: feature_woe: Numeric vector WoE assigned instance processed categorical variable. bin: DataFrame generated bins, containing following fields: bin: Names categories grouped bin. woe: Weight Evidence (WoE) bin. iv: Information Value (IV) bin. count: Total number observations bin. count_pos: Count positive events bin. count_neg: Count negative events bin. woe: Numeric vector WoE bin. iv: Total Information Value (IV) calculated variable. pos: Vector count positive events bin. neg: Vector count negative events bin.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningCategoricalMOB.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs optimal binning of a categorical variable for Weight of Evidence (WoE) and Information Value (IV) using Monotonic Optimal Binning (MOB) — OptimalBinningCategoricalMOB","title":"Performs optimal binning of a categorical variable for Weight of Evidence (WoE) and Information Value (IV) using Monotonic Optimal Binning (MOB) — OptimalBinningCategoricalMOB","text":"function processes categorical variable grouping rare categories, ordering event rate, generating bins maximize WoE monotonicity. also applies constraints ensure bins minimum number bad events (min_bads) calculates WoE IV generated bins.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningCategoricalMOB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs optimal binning of a categorical variable for Weight of Evidence (WoE) and Information Value (IV) using Monotonic Optimal Binning (MOB) — OptimalBinningCategoricalMOB","text":"","code":"OptimalBinningCategoricalMOB(   target,   feature,   min_bins = 2L,   max_bins = 7L,   cat_cutoff = 0.05,   min_bads = 0.05,   max_n_prebins = 20L )"},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningCategoricalMOB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs optimal binning of a categorical variable for Weight of Evidence (WoE) and Information Value (IV) using Monotonic Optimal Binning (MOB) — OptimalBinningCategoricalMOB","text":"target Integer vector representing binary target variable, 1 indicates positive event (e.g., default) 0 indicates negative event (e.g., non-default). feature Character vector representing categorical variable binned. min_bins (Optional) Minimum number bins generate. Default 2. max_bins (Optional) Maximum number bins generate. Default 7. cat_cutoff (Optional) Frequency cutoff value, categories grouped \"\". Default 0.05. min_bads (Optional) Minimum proportion bad events bin must contain. Default 0.05. max_n_prebins (Optional) Maximum number pre-bins consider final binning. Default 20.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningCategoricalMOB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performs optimal binning of a categorical variable for Weight of Evidence (WoE) and Information Value (IV) using Monotonic Optimal Binning (MOB) — OptimalBinningCategoricalMOB","text":"list following elements: feature_woe: Numeric vector WoE assigned instance processed categorical variable. bin: DataFrame generated bins, containing following fields: bin: Names categories grouped bin. woe: Weight Evidence (WoE) bin. iv: Information Value (IV) bin. count: Total number observations bin. count_pos: Count positive events bin. count_neg: Count negative events bin. woe: Numeric vector WoE bin. iv: Total Information Value (IV) calculated variable. pos: Vector count positive events bin. neg: Vector count negative events bin.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningDataPreprocessor.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocesses a numeric or categorical variable for optimal binning with handling of missing values and outliers — OptimalBinningDataPreprocessor","title":"Preprocesses a numeric or categorical variable for optimal binning with handling of missing values and outliers — OptimalBinningDataPreprocessor","text":"function preprocesses given numeric categorical feature, handling missing values outliers based specified method. can process numeric categorical features supports outlier detection various methods, including IQR, Z-score, Grubbs' test. function also generates summary statistics preprocessing.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningDataPreprocessor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocesses a numeric or categorical variable for optimal binning with handling of missing values and outliers — OptimalBinningDataPreprocessor","text":"","code":"OptimalBinningDataPreprocessor(   target,   feature,   num_miss_value = -999,   char_miss_value = \"N/A\",   outlier_method = \"iqr\",   outlier_process = FALSE,   preprocess = as.character(c(\"both\")),   iqr_k = 1.5,   zscore_threshold = 3,   grubbs_alpha = 0.05 )"},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningDataPreprocessor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocesses a numeric or categorical variable for optimal binning with handling of missing values and outliers — OptimalBinningDataPreprocessor","text":"target Numeric vector representing binary target variable, 1 indicates positive event (e.g., default) 0 indicates negative event (e.g., non-default). feature Numeric character vector representing feature binned. num_miss_value (Optional) Numeric value replace missing values numeric features. Default -999.0. char_miss_value (Optional) String value replace missing values categorical features. Default \"N/\". outlier_method (Optional) Method detect outliers. Choose \"iqr\", \"zscore\", \"grubbs\". Default \"iqr\". outlier_process (Optional) Boolean flag indicating whether outliers processed. Default FALSE. preprocess (Optional) Character vector specifying return: \"feature\", \"report\", \"\". Default \"\". iqr_k (Optional) multiplier interquartile range (IQR) using IQR method detect outliers. Default 1.5. zscore_threshold (Optional) threshold Z-score detect outliers. Default 3.0. grubbs_alpha (Optional) significance level Grubbs' test detect outliers. Default 0.05.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningDataPreprocessor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocesses a numeric or categorical variable for optimal binning with handling of missing values and outliers — OptimalBinningDataPreprocessor","text":"list containing following elements based preprocess parameter: preprocess: DataFrame containing original preprocessed feature values. report: DataFrame summarizing variable type, number missing values, number outliers (numeric features), statistics preprocessing.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningDataPreprocessor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Preprocesses a numeric or categorical variable for optimal binning with handling of missing values and outliers — OptimalBinningDataPreprocessor","text":"function can handle numeric categorical features. numeric features, replaces missing values num_miss_value can apply outlier detection using different methods. categorical features, replaces missing values char_miss_value. function can return preprocessed feature /report summary statistics.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningDataPreprocessor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocesses a numeric or categorical variable for optimal binning with handling of missing values and outliers — OptimalBinningDataPreprocessor","text":"","code":"if (FALSE) { # \\dontrun{ target <- c(0, 1, 1, 0, 1) feature_numeric <- c(10, 20, NA, 40, 50) feature_categorical <- c(\"A\", \"B\", NA, \"B\", \"A\") result <- OptimalBinningDataPreprocessor(target, feature_numeric, outlier_process = TRUE) result <- OptimalBinningDataPreprocessor(target, feature_categorical) } # }"},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningGainsTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a Gains Table from the results of optimal binning — OptimalBinningGainsTable","title":"Generates a Gains Table from the results of optimal binning — OptimalBinningGainsTable","text":"function takes result optimal binning process generates detailed gains table. gains table includes metrics Weight Evidence (WoE), Information Value (IV), cumulative positive negative percentages, Kolmogorov-Smirnov (KS) statistic, odds ratio, lift, Gini contribution bin.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningGainsTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a Gains Table from the results of optimal binning — OptimalBinningGainsTable","text":"","code":"OptimalBinningGainsTable(binning_result)"},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningGainsTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a Gains Table from the results of optimal binning — OptimalBinningGainsTable","text":"binning_result list containing binning results, must include data frame following columns: \"bin\", \"count\", \"count_pos\", \"count_neg\", \"woe\".","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningGainsTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a Gains Table from the results of optimal binning — OptimalBinningGainsTable","text":"data frame containing following columns bin: bin: bin labels. count: Total count observations bin. pos: Count positive events bin. neg: Count negative events bin. woe: Weight Evidence (WoE) bin. iv: Information Value (IV) contribution bin. total_iv: Total Information Value (IV) across bins. cum_pos: Cumulative count positive events current bin. cum_neg: Cumulative count negative events current bin. pos_rate: Rate positive events within bin. neg_rate: Rate negative events within bin. pos_perc: Percentage positive events relative total positive events. neg_perc: Percentage negative events relative total negative events. count_perc: Percentage total observations bin. cum_count_perc: Cumulative percentage observations current bin. cum_pos_perc: Cumulative percentage positive events current bin. cum_neg_perc: Cumulative percentage negative events current bin. cum_pos_perc_total: Cumulative percentage positive events relative total observations. cum_neg_perc_total: Cumulative percentage negative events relative total observations. odds_pos: Odds positive events bin. odds_ratio: Odds ratio positive events compared total population. lift: Lift bin, calculated ratio positive rate bin overall positive rate. ks: Kolmogorov-Smirnov statistic, measuring difference cumulative positive negative percentages. gini_contribution: Contribution Gini coefficient bin.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningGainsTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a Gains Table from the results of optimal binning — OptimalBinningGainsTable","text":"","code":"if (FALSE) { # \\dontrun{ binning_result <- OptimalBinning(target, feature) gains_table <- OptimalBinningGainsTable(binning_result) } # }"},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningGainsTableFeature.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a Gains Table from the Weight of Evidence (WoE) and target feature data — OptimalBinningGainsTableFeature","title":"Generates a Gains Table from the Weight of Evidence (WoE) and target feature data — OptimalBinningGainsTableFeature","text":"function takes numeric vector Weight Evidence (WoE) values corresponding binary target variable generate gains table. table includes key metrics counts, event rates, cumulative sums, Kolmogorov-Smirnov (KS) statistic, Information Value (IV), odds ratio, lift, Gini contribution unique WoE bin.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningGainsTableFeature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a Gains Table from the Weight of Evidence (WoE) and target feature data — OptimalBinningGainsTableFeature","text":"","code":"OptimalBinningGainsTableFeature(feature_woe, target)"},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningGainsTableFeature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a Gains Table from the Weight of Evidence (WoE) and target feature data — OptimalBinningGainsTableFeature","text":"feature_woe Numeric vector representing Weight Evidence (WoE) values observation. target Numeric vector representing binary target variable, 1 indicates positive event (e.g., default) 0 indicates negative event (e.g., non-default).","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningGainsTableFeature.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a Gains Table from the Weight of Evidence (WoE) and target feature data — OptimalBinningGainsTableFeature","text":"data frame containing following columns unique WoE bin: bin: bin labels. count: Total count observations bin. pos: Count positive events bin. neg: Count negative events bin. woe: Weight Evidence (WoE) value bin. iv: Information Value (IV) contribution bin. total_iv: Total Information Value (IV) across bins. cum_pos: Cumulative count positive events current bin. cum_neg: Cumulative count negative events current bin. pos_rate: Rate positive events bin. neg_rate: Rate negative events bin. pos_perc: Percentage positive events relative total positive events. neg_perc: Percentage negative events relative total negative events. count_perc: Percentage total observations bin. cum_count_perc: Cumulative percentage observations current bin. cum_pos_perc: Cumulative percentage positive events current bin. cum_neg_perc: Cumulative percentage negative events current bin. cum_pos_perc_total: Cumulative percentage positive events relative total observations. cum_neg_perc_total: Cumulative percentage negative events relative total observations. odds_pos: Odds positive events bin. odds_ratio: Odds ratio positive events bin compared total population. lift: Lift bin, calculated ratio positive rate bin overall positive rate. ks: Kolmogorov-Smirnov statistic, measuring difference cumulative positive negative percentages. gini_contribution: Contribution Gini coefficient bin.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningGainsTableFeature.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generates a Gains Table from the Weight of Evidence (WoE) and target feature data — OptimalBinningGainsTableFeature","text":"function assumes feature_woe target length. groups target values unique WoE values, computes various metrics group, returns comprehensive gains table.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningGainsTableFeature.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a Gains Table from the Weight of Evidence (WoE) and target feature data — OptimalBinningGainsTableFeature","text":"","code":"if (FALSE) { # \\dontrun{ feature_woe <- c(-0.5, 0.2, 0.2, -0.5, 0.3) target <- c(1, 0, 1, 0, 1) gains_table <- OptimalBinningGainsTableFeature(feature_woe, target) } # }"},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningNumericCAIM.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs optimal binning of a numeric variable for Weight of Evidence (WoE) and Information Value (IV) using the Class-Attribute Interdependence Maximization (CAIM) criterion — OptimalBinningNumericCAIM","title":"Performs optimal binning of a numeric variable for Weight of Evidence (WoE) and Information Value (IV) using the Class-Attribute Interdependence Maximization (CAIM) criterion — OptimalBinningNumericCAIM","text":"function processes numeric variable creating pre-bins based unique values. iteratively merges splits bins maximize CAIM criterion, ensuring monotonicity event rates respecting minimum number bad events (min_bads) per bin. also calculates WoE IV generated bins.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningNumericCAIM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs optimal binning of a numeric variable for Weight of Evidence (WoE) and Information Value (IV) using the Class-Attribute Interdependence Maximization (CAIM) criterion — OptimalBinningNumericCAIM","text":"","code":"OptimalBinningNumericCAIM(   target,   feature,   min_bins = 2L,   max_bins = 7L,   bin_cutoff = 0.05,   min_bads = 0.05,   max_n_prebins = 20L )"},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningNumericCAIM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs optimal binning of a numeric variable for Weight of Evidence (WoE) and Information Value (IV) using the Class-Attribute Interdependence Maximization (CAIM) criterion — OptimalBinningNumericCAIM","text":"target Integer vector representing binary target variable, 1 indicates positive event (e.g., default) 0 indicates negative event (e.g., non-default). feature Numeric vector representing numeric variable binned. min_bins (Optional) Minimum number bins generate. Default 2. max_bins (Optional) Maximum number bins generate. Default 7. bin_cutoff (Optional) Cutoff value determines frequency values define pre-bins. Default 0.05. min_bads (Optional) Minimum proportion bad events (positive target events) bin must contain. Default 0.05. max_n_prebins (Optional) Maximum number pre-bins consider final binning. Default 20.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningNumericCAIM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performs optimal binning of a numeric variable for Weight of Evidence (WoE) and Information Value (IV) using the Class-Attribute Interdependence Maximization (CAIM) criterion — OptimalBinningNumericCAIM","text":"list following elements: feature_woe: Numeric vector WoE assigned instance processed numeric variable. bin: DataFrame generated bins, containing following fields: bin: String representing range values bin. woe: Weight Evidence (WoE) bin. iv: Information Value (IV) bin. count: Total number observations bin. count_pos: Count positive events bin. count_neg: Count negative events bin. woe: Numeric vector WoE bin. iv: Total Information Value (IV) calculated variable. pos: Vector count positive events bin. neg: Vector count negative events bin.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningNumericChiMerge.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs optimal binning of a numeric variable for Weight of Evidence (WoE) and Information Value (IV) using the ChiMerge algorithm — OptimalBinningNumericChiMerge","title":"Performs optimal binning of a numeric variable for Weight of Evidence (WoE) and Information Value (IV) using the ChiMerge algorithm — OptimalBinningNumericChiMerge","text":"function processes numeric variable removing missing values creating pre-bins based unique values. iteratively merges bins using Chi-square test independence, p-value threshold determine whether bins merged. ensures minimum number bad events (min_bads) respected, also calculating WoE IV generated bins.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningNumericChiMerge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs optimal binning of a numeric variable for Weight of Evidence (WoE) and Information Value (IV) using the ChiMerge algorithm — OptimalBinningNumericChiMerge","text":"","code":"OptimalBinningNumericChiMerge(   target,   feature,   min_bins = 2L,   max_bins = 7L,   pvalue_threshold = 0.05,   bin_cutoff = 0.05,   min_bads = 0.05,   max_n_prebins = 20L )"},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningNumericChiMerge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs optimal binning of a numeric variable for Weight of Evidence (WoE) and Information Value (IV) using the ChiMerge algorithm — OptimalBinningNumericChiMerge","text":"target Integer vector representing binary target variable, 1 indicates positive event (e.g., default) 0 indicates negative event (e.g., non-default). feature Numeric vector representing numeric variable binned. min_bins (Optional) Minimum number bins generate. Default 2. max_bins (Optional) Maximum number bins generate. Default 7. pvalue_threshold (Optional) P-value threshold chi-square test used determine whether merge bins. Default 0.05. bin_cutoff (Optional) Cutoff value determines frequency values define pre-bins. Default 0.05. min_bads (Optional) Minimum proportion bad events (positive target events) bin must contain. Default 0.05. max_n_prebins (Optional) Maximum number pre-bins consider final binning. Default 20.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningNumericChiMerge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performs optimal binning of a numeric variable for Weight of Evidence (WoE) and Information Value (IV) using the ChiMerge algorithm — OptimalBinningNumericChiMerge","text":"list following elements: feature_woe: Numeric vector WoE assigned instance processed numeric variable. bin: DataFrame generated bins, containing following fields: bin: String representing range values bin. woe: Weight Evidence (WoE) bin. iv: Information Value (IV) bin. count: Total number observations bin. count_pos: Count positive events bin. count_neg: Count negative events bin. woe: Numeric vector WoE bin. iv: Total Information Value (IV) calculated variable. pos: Vector count positive events bin. neg: Vector count negative events bin.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningNumericMDLP.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs optimal binning of a numeric variable for Weight of Evidence (WoE) and Information Value (IV) using the Minimum Description Length Principle (MDLP) criterion — OptimalBinningNumericMDLP","title":"Performs optimal binning of a numeric variable for Weight of Evidence (WoE) and Information Value (IV) using the Minimum Description Length Principle (MDLP) criterion — OptimalBinningNumericMDLP","text":"function processes numeric variable creates pre-bins based unique values. iteratively splits bins using MDLP criterion maximize information gain, ensuring monotonicity event rates respecting minimum number bad events (min_bads) per bin. also calculates WoE IV generated bins.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningNumericMDLP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs optimal binning of a numeric variable for Weight of Evidence (WoE) and Information Value (IV) using the Minimum Description Length Principle (MDLP) criterion — OptimalBinningNumericMDLP","text":"","code":"OptimalBinningNumericMDLP(   target,   feature,   min_bins = 2L,   max_bins = 7L,   bin_cutoff = 0.05,   min_bads = 0.05,   max_n_prebins = 20L )"},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningNumericMDLP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs optimal binning of a numeric variable for Weight of Evidence (WoE) and Information Value (IV) using the Minimum Description Length Principle (MDLP) criterion — OptimalBinningNumericMDLP","text":"target Integer vector representing binary target variable, 1 indicates positive event (e.g., default) 0 indicates negative event (e.g., non-default). feature Numeric vector representing numeric variable binned. min_bins (Optional) Minimum number bins generate. Default 2. max_bins (Optional) Maximum number bins generate. Default 7. bin_cutoff (Optional) Cutoff value determines frequency values define pre-bins. Default 0.05. min_bads (Optional) Minimum proportion bad events (positive target events) bin must contain. Default 0.05. max_n_prebins (Optional) Maximum number pre-bins consider final binning. Default 20.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningNumericMDLP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performs optimal binning of a numeric variable for Weight of Evidence (WoE) and Information Value (IV) using the Minimum Description Length Principle (MDLP) criterion — OptimalBinningNumericMDLP","text":"list following elements: feature_woe: Numeric vector WoE assigned instance processed numeric variable. bin: DataFrame generated bins, containing following fields: bin: String representing range values bin. woe: Weight Evidence (WoE) bin. iv: Information Value (IV) bin. count: Total number observations bin. count_pos: Count positive events bin. count_neg: Count negative events bin. woe: Numeric vector WoE bin. iv: Total Information Value (IV) calculated variable. pos: Vector count positive events bin. neg: Vector count negative events bin.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningNumericMIP.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs optimal binning of a numeric variable for Weight of Evidence (WoE) and Information Value (IV) using a Mixed-Integer Programming (MIP) approach — OptimalBinningNumericMIP","title":"Performs optimal binning of a numeric variable for Weight of Evidence (WoE) and Information Value (IV) using a Mixed-Integer Programming (MIP) approach — OptimalBinningNumericMIP","text":"function processes numeric variable, removes missing values, creates pre-bins based unique values. iteratively splits bins maximize Information Value (IV) ensuring monotonicity. function also calculates WoE IV generated bins.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningNumericMIP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs optimal binning of a numeric variable for Weight of Evidence (WoE) and Information Value (IV) using a Mixed-Integer Programming (MIP) approach — OptimalBinningNumericMIP","text":"","code":"OptimalBinningNumericMIP(   target,   feature,   min_bins = 2L,   max_bins = 7L,   bin_cutoff = 0.05,   max_n_prebins = 20L )"},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningNumericMIP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs optimal binning of a numeric variable for Weight of Evidence (WoE) and Information Value (IV) using a Mixed-Integer Programming (MIP) approach — OptimalBinningNumericMIP","text":"target Integer vector representing binary target variable, 1 indicates positive event (e.g., default) 0 indicates negative event (e.g., non-default). feature Numeric vector representing numeric variable binned. min_bins (Optional) Minimum number bins generate. Default 2. max_bins (Optional) Maximum number bins generate. Default 7. bin_cutoff (Optional) Cutoff value determines frequency values define pre-bins. Default 0.05. max_n_prebins (Optional) Maximum number pre-bins consider final binning. Default 20.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningNumericMIP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performs optimal binning of a numeric variable for Weight of Evidence (WoE) and Information Value (IV) using a Mixed-Integer Programming (MIP) approach — OptimalBinningNumericMIP","text":"list following elements: feature_woe: Numeric vector WoE assigned instance processed numeric variable. bin: DataFrame containing generated bins, following fields: bin: String representing range values bin. woe: Weight Evidence (WoE) bin. iv: Information Value (IV) bin. count: Total number observations bin. count_pos: Count positive events bin. count_neg: Count negative events bin. woe: Numeric vector WoE bin. iv: Total Information Value (IV) calculated variable. pos: Vector count positive events bin. neg: Vector count negative events bin.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningNumericMOB.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs optimal binning of a numeric variable for Weight of Evidence (WoE) and Information Value (IV) using the Monotonic Optimal Binning (MOB) approach — OptimalBinningNumericMOB","title":"Performs optimal binning of a numeric variable for Weight of Evidence (WoE) and Information Value (IV) using the Monotonic Optimal Binning (MOB) approach — OptimalBinningNumericMOB","text":"function processes numeric variable removing missing values creating pre-bins based unique values. iteratively merges splits bins ensure monotonicity event rates, constraints minimum number bad events (min_bads) number pre-bins. function also calculates WoE IV generated bins.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningNumericMOB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs optimal binning of a numeric variable for Weight of Evidence (WoE) and Information Value (IV) using the Monotonic Optimal Binning (MOB) approach — OptimalBinningNumericMOB","text":"","code":"OptimalBinningNumericMOB(   target,   feature,   min_bins = 2L,   max_bins = 7L,   bin_cutoff = 0.05,   min_bads = 0.05,   max_n_prebins = 20L )"},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningNumericMOB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs optimal binning of a numeric variable for Weight of Evidence (WoE) and Information Value (IV) using the Monotonic Optimal Binning (MOB) approach — OptimalBinningNumericMOB","text":"target Integer vector representing binary target variable, 1 indicates positive event (e.g., default) 0 indicates negative event (e.g., non-default). feature Numeric vector representing numeric variable binned. min_bins (Optional) Minimum number bins generate. Default 2. max_bins (Optional) Maximum number bins generate. Default 7. bin_cutoff (Optional) Cutoff value determines frequency values define pre-bins. Default 0.05. min_bads (Optional) Minimum proportion bad events (positive target events) bin must contain. Default 0.05. max_n_prebins (Optional) Maximum number pre-bins consider final binning. Default 20.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningNumericMOB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performs optimal binning of a numeric variable for Weight of Evidence (WoE) and Information Value (IV) using the Monotonic Optimal Binning (MOB) approach — OptimalBinningNumericMOB","text":"list following elements: feature_woe: Numeric vector WoE assigned instance processed numeric variable. bin: DataFrame generated bins, containing following fields: bin: String representing range values bin. woe: Weight Evidence (WoE) bin. iv: Information Value (IV) bin. count: Total number observations bin. count_pos: Count positive events bin. count_neg: Count negative events bin. woe: Numeric vector WoE bin. iv: Total Information Value (IV) calculated variable. pos: Vector count positive events bin. neg: Vector count negative events bin.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningNumericPAVA.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs optimal binning of a numeric variable for Weight of Evidence (WoE) and Information Value (IV) using the Pool Adjacent Violators Algorithm (PAVA) to enforce monotonicity — OptimalBinningNumericPAVA","title":"Performs optimal binning of a numeric variable for Weight of Evidence (WoE) and Information Value (IV) using the Pool Adjacent Violators Algorithm (PAVA) to enforce monotonicity — OptimalBinningNumericPAVA","text":"function processes numeric variable removing missing values creating pre-bins based unique values. applies Pool Adjacent Violators Algorithm (PAVA) ensure monotonicity event rates, either increasing decreasing based specified direction. function respects minimum number bad events (min_bads) per bin calculates WoE IV generated bins.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningNumericPAVA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs optimal binning of a numeric variable for Weight of Evidence (WoE) and Information Value (IV) using the Pool Adjacent Violators Algorithm (PAVA) to enforce monotonicity — OptimalBinningNumericPAVA","text":"","code":"OptimalBinningNumericPAVA(   target,   feature,   max_bins = 7L,   bin_cutoff = 0.05,   min_bads = 0.05,   max_n_prebins = 20L,   monotonicity_direction = \"increase\" )"},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningNumericPAVA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs optimal binning of a numeric variable for Weight of Evidence (WoE) and Information Value (IV) using the Pool Adjacent Violators Algorithm (PAVA) to enforce monotonicity — OptimalBinningNumericPAVA","text":"target Integer vector representing binary target variable, 1 indicates positive event (e.g., default) 0 indicates negative event (e.g., non-default). feature Numeric vector representing numeric variable binned. max_bins (Optional) Maximum number bins generate. Default 7. bin_cutoff (Optional) Cutoff value determines frequency values define pre-bins. Default 0.05. min_bads (Optional) Minimum proportion bad events (positive target events) bin must contain. Default 0.05. max_n_prebins (Optional) Maximum number pre-bins consider final binning. Default 20. monotonicity_direction (Optional) String defines monotonicity direction event rates, either \"increase\" increasing monotonicity \"decrease\" decreasing monotonicity. Default \"increase\".","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningNumericPAVA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performs optimal binning of a numeric variable for Weight of Evidence (WoE) and Information Value (IV) using the Pool Adjacent Violators Algorithm (PAVA) to enforce monotonicity — OptimalBinningNumericPAVA","text":"list following elements: feature_woe: Numeric vector WoE assigned instance processed numeric variable. bin: DataFrame generated bins, containing following fields: bin: String representing range values bin. woe: Weight Evidence (WoE) bin. iv: Information Value (IV) bin. count: Total number observations bin. count_pos: Count positive events bin. count_neg: Count negative events bin. woe: Numeric vector WoE bin. iv: Total Information Value (IV) calculated variable. pos: Vector count positive events bin. neg: Vector count negative events bin.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningNumericTree.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs optimal binning of a numeric variable for Weight of Evidence (WoE) and Information Value (IV) using a decision tree-based approach — OptimalBinningNumericTree","title":"Performs optimal binning of a numeric variable for Weight of Evidence (WoE) and Information Value (IV) using a decision tree-based approach — OptimalBinningNumericTree","text":"function processes numeric variable applies decision tree algorithm iteratively split data bins. tree splits based Information Value (IV) gain, constraints minimum bin size maximum depth. function ensures monotonicity event rates, merging bins necessary reduce number bins specified maximum. also calculates WoE IV generated bins.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningNumericTree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs optimal binning of a numeric variable for Weight of Evidence (WoE) and Information Value (IV) using a decision tree-based approach — OptimalBinningNumericTree","text":"","code":"OptimalBinningNumericTree(   target,   feature,   max_bins = 7L,   lambda = 0.1,   min_bin_size = 0.05,   min_iv_gain = 0.01,   max_depth = 10L,   monotonicity_direction = \"increase\" )"},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningNumericTree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs optimal binning of a numeric variable for Weight of Evidence (WoE) and Information Value (IV) using a decision tree-based approach — OptimalBinningNumericTree","text":"target Integer vector representing binary target variable, 1 indicates positive event (e.g., default) 0 indicates negative event (e.g., non-default). feature Numeric vector representing numeric variable binned. max_bins (Optional) Maximum number bins generate. Default 7. lambda (Optional) Regularization parameter penalize tree splits. Default 0.1. min_bin_size (Optional) Minimum size bin must proportion total data. Default 0.05. min_iv_gain (Optional) Minimum Information Value (IV) gain required perform split. Default 0.01. max_depth (Optional) Maximum depth decision tree. Default 10. monotonicity_direction (Optional) String defines monotonicity direction event rates, either \"increase\" increasing monotonicity \"decrease\" decreasing monotonicity. Default \"increase\".","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningNumericTree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performs optimal binning of a numeric variable for Weight of Evidence (WoE) and Information Value (IV) using a decision tree-based approach — OptimalBinningNumericTree","text":"list following elements: feature_woe: Numeric vector WoE assigned instance processed numeric variable. bin: DataFrame generated bins, containing following fields: bin: String representing range values bin. woe: Weight Evidence (WoE) bin. count: Total number observations bin. count_pos: Count positive events bin. count_neg: Count negative events bin. woe: Numeric vector WoE bin. iv: Total Information Value (IV) calculated variable. pos: Vector count positive events bin. neg: Vector count negative events bin.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningSelectAlgorithm.html","id":null,"dir":"Reference","previous_headings":"","what":"Select Optimal Binning Algorithm — OptimalBinningSelectAlgorithm","title":"Select Optimal Binning Algorithm — OptimalBinningSelectAlgorithm","text":"function selects appropriate binning algorithm based method variable type.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningSelectAlgorithm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select Optimal Binning Algorithm — OptimalBinningSelectAlgorithm","text":"","code":"OptimalBinningSelectAlgorithm(feature, method, dt, control)"},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningSelectAlgorithm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select Optimal Binning Algorithm — OptimalBinningSelectAlgorithm","text":"feature name feature bin. method binning method use. dt data.table containing dataset. control list additional control parameters.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningSelectAlgorithm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select Optimal Binning Algorithm — OptimalBinningSelectAlgorithm","text":"list containing selected algorithm, parameters, method name.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningValidateInputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Inputs for Optimal Binning — OptimalBinningValidateInputs","title":"Validate Inputs for Optimal Binning — OptimalBinningValidateInputs","text":"function validates inputs OptimalBinningWoE function.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningValidateInputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Inputs for Optimal Binning — OptimalBinningValidateInputs","text":"","code":"OptimalBinningValidateInputs(   dt,   target,   feature,   method,   min_bins,   max_bins,   cat_cutoff,   bin_cutoff,   control )"},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningValidateInputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Inputs for Optimal Binning — OptimalBinningValidateInputs","text":"dt data.table containing dataset. target name target variable. feature Optional. Name specific feature process. method binning method use. min_bins Minimum number bins. max_bins Maximum number bins. cat_cutoff Cutoff categorical variables. bin_cutoff Cutoff numeric variables. control list additional control parameters.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningValidateInputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Inputs for Optimal Binning — OptimalBinningValidateInputs","text":"return value, called side effects","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningWoE.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal Binning and Weight of Evidence Calculation — OptimalBinningWoE","title":"Optimal Binning and Weight of Evidence Calculation — OptimalBinningWoE","text":"function performs optimal binning calculates Weight Evidence (WoE) multiple features. supports automatic method selection data preprocessing.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningWoE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal Binning and Weight of Evidence Calculation — OptimalBinningWoE","text":"","code":"OptimalBinningWoE(   dt,   target,   feature = NULL,   method = \"auto\",   preprocess = TRUE,   min_bins = 2,   max_bins = 4,   cat_cutoff = 0.05,   bin_cutoff = 0.05,   control = list(min_bads = 0.05, pvalue_threshold = 0.05, max_n_prebins = 20,     monotonicity_direction = \"increase\", lambda = 0.1, min_bin_size = 0.05, min_iv_gain =     0.01, max_depth = 10, num_miss_value = -999, char_miss_value = \"N/A\", outlier_method     = \"iqr\", outlier_process = FALSE, iqr_k = 1.5, zscore_threshold = 3, grubbs_alpha =     0.05) )"},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningWoE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal Binning and Weight of Evidence Calculation — OptimalBinningWoE","text":"dt data.table containing dataset. target name target variable (must binary). feature Optional. Name specific feature process. NULL, features except target processed. method binning method use. Can \"auto\" specific method name. See Details information. preprocess Logical. Whether preprocess data binning. min_bins Minimum number bins. max_bins Maximum number bins. cat_cutoff Cutoff categorical variables. bin_cutoff Cutoff numeric variables. control list additional control parameters. See Details information.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningWoE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal Binning and Weight of Evidence Calculation — OptimalBinningWoE","text":"list containing: woe_feature: original dataset added WoE columns woe_woebins: Information bins created prep_report: Preprocessing report feature","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningWoE.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Optimal Binning and Weight of Evidence Calculation — OptimalBinningWoE","text":"Supported Algorithms: function supports following binning algorithms: CAIM (Class-Attribute Interdependence Maximization): Applicable categorical numeric variables. maximizes class-attribute interdependence find optimal bins. - Categorical: OptimalBinningCategoricalCAIM - Numeric: OptimalBinningNumericCAIM ChiMerge: Applicable categorical numeric variables. uses chi-square statistic iteratively merge adjacent intervals stopping criterion met. - Categorical: OptimalBinningCategoricalChiMerge - Numeric: OptimalBinningNumericChiMerge MDLP (Minimum Description Length Principle): Applicable categorical numeric variables. uses principle minimum description length find optimal splitting points. - Categorical: OptimalBinningCategoricalMDLP - Numeric: OptimalBinningNumericMDLP MIP (Minimum Information Pure): Applicable categorical numeric variables. aims minimize impurity information within bin. - Categorical: OptimalBinningCategoricalMIP - Numeric: OptimalBinningNumericMIP MOB (Monotone Optimal Binning): Applicable categorical numeric variables. ensures monotonicity binning process optimizing chosen metric. - Categorical: OptimalBinningCategoricalMOB - Numeric: OptimalBinningNumericMOB IV (Information Value): Applicable categorical variables. bins categories based information value respect target variable. - Categorical: OptimalBinningCategoricalIV PAVA (Pool Adjacent Violators Algorithm): Applicable numeric variables. ensures monotonicity binning process pooling adjacent bins violate monotonicity constraint. - Numeric: OptimalBinningNumericPAVA Tree-based binning: Applicable numeric variables. uses decision tree algorithms create bins, allowing flexible potentially non-linear binning. - Numeric: OptimalBinningNumericTree algorithm strengths may perform differently depending nature data. automatic method selection option tests applicable algorithms chooses one produces highest Information Value. specifying method, use short name (e.g., \"caim\", \"chimerge\") rather full algorithm name. Control Parameters: control list can include following parameters: min_bads: Minimum proportion \"bad\" cases bin (default: 0.05) pvalue_threshold: P-value threshold statistical tests (default: 0.05) max_n_prebins: Maximum number pre-bins optimization (default: 20) monotonicity_direction: Direction monotonicity (\"increase\" \"decrease\") (default: \"increase\") lambda: Regularization parameter tree-based methods (default: 0.1) min_bin_size: Minimum proportion cases bin (default: 0.05) min_iv_gain: Minimum IV gain creating new split (default: 0.01) max_depth: Maximum depth tree-based methods (default: 10) num_miss_value: Value represent missing numeric values (default: -999.0) char_miss_value: Value represent missing categorical values (default: \"N/\") outlier_method: Method outlier detection (\"iqr\", \"zscore\", \"grubbs\") (default: \"iqr\") outlier_process: Whether process outliers (default: FALSE) iqr_k: Factor IQR method (default: 1.5) zscore_threshold: Threshold Z-score method (default: 3) grubbs_alpha: Significance level Grubbs' test (default: 0.05)","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningWoE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal Binning and Weight of Evidence Calculation — OptimalBinningWoE","text":"","code":"if (FALSE) { # \\dontrun{ # Load necessary libraries library(data.table)  # Create a sample dataset dt <- data.table(   target = sample(0:1, 1000, replace = TRUE),   num_feat = rnorm(1000),   cat_feat = sample(letters[1:5], 1000, replace = TRUE) )  # Run OptimalBinningWoE with automatic method selection result <- OptimalBinningWoE(dt, target = \"target\", method = \"auto\")  # Check the results head(result$woe_feature) head(result$woe_woebins) head(result$prep_report) } # }"},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningselectBestModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Select Best Binning Model — OptimalBinningselectBestModel","title":"Select Best Binning Model — OptimalBinningselectBestModel","text":"function tests multiple binning methods selects best one based Information Value (IV).","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningselectBestModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select Best Binning Model — OptimalBinningselectBestModel","text":"","code":"OptimalBinningselectBestModel(dt, target, feature, control, min_bins, max_bins)"},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningselectBestModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select Best Binning Model — OptimalBinningselectBestModel","text":"dt data.table containing dataset. target name target variable. feature name feature bin. control list additional control parameters. min_bins Minimum number bins. max_bins Maximum number bins.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/OptimalBinningselectBestModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select Best Binning Model — OptimalBinningselectBestModel","text":"binning result best method.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://evandeilton.github.io/OptimalBinningWoE/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""}]
