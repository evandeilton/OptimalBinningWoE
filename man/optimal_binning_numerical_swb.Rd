% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{optimal_binning_numerical_swb}
\alias{optimal_binning_numerical_swb}
\title{Optimal Binning for Numerical Variables using Sliding Window Binning}
\usage{
optimal_binning_numerical_swb(
  target,
  feature,
  min_bins = 3L,
  max_bins = 5L,
  bin_cutoff = 0.05,
  max_n_prebins = 20L
)
}
\arguments{
\item{target}{An integer vector of binary target values (0 or 1).}

\item{feature}{A numeric vector of feature values to be binned.}

\item{min_bins}{Minimum number of bins (default: 3).}

\item{max_bins}{Maximum number of bins (default: 5).}

\item{bin_cutoff}{Minimum frequency of observations in each bin (default: 0.05).}

\item{max_n_prebins}{Maximum number of pre-bins for initial quantile-based discretization (default: 20).}
}
\value{
A list containing two elements:
\item{woefeature}{A numeric vector of WoE-transformed feature values.}
\item{woebin}{A data frame with binning details, including bin boundaries, WoE, IV, and count statistics.}
}
\description{
This function implements an optimal binning algorithm for numerical variables using
a Sliding Window Binning (SWB) approach with Weight of Evidence (WoE) and
Information Value (IV) criteria.
}
\details{
The optimal binning algorithm for numerical variables uses a Sliding Window Binning
approach with Weight of Evidence (WoE) and Information Value (IV) to create bins
that maximize the predictive power of the feature while maintaining interpretability.

The algorithm follows these steps:
\enumerate{
\item Initial discretization using quantile-based binning
\item Merging of rare bins based on the bin_cutoff parameter
\item Adjustment of bin count to be within the specified range (min_bins to max_bins)
\item Calculation of WoE and IV for each bin
\item Enforcement of monotonicity in WoE across bins
\item Final adjustment to ensure the number of bins does not exceed max_bins
}

Weight of Evidence (WoE) is calculated for each bin as:

\deqn{WoE_i = \ln\left(\frac{P(X_i|Y=1)}{P(X_i|Y=0)}\right)}

where \eqn{P(X_i|Y=1)} is the proportion of positive cases in bin i, and
\eqn{P(X_i|Y=0)} is the proportion of negative cases in bin i.

Information Value (IV) for each bin is calculated as:

\deqn{IV_i = (P(X_i|Y=1) - P(X_i|Y=0)) * WoE_i}

The total IV for the feature is the sum of IVs across all bins:

\deqn{IV_{total} = \sum_{i=1}^{n} IV_i}

The SWB approach ensures that the resulting binning maximizes the separation between
classes while maintaining the desired number of bins and respecting the minimum bin
frequency constraint.
}
\examples{
\dontrun{
# Generate sample data
set.seed(123)
n <- 10000
feature <- rnorm(n)
target <- rbinom(n, 1, plogis(0.5 * feature))

# Apply optimal binning
result <- optimal_binning_numerical_swb(target, feature, min_bins = 3, max_bins = 5)

# View binning results
print(result$woebin)

# Plot WoE transformation
plot(feature, result$woefeature, main = "WoE Transformation", 
     xlab = "Original Feature", ylab = "WoE")
}

}
\references{
\itemize{
\item Mironchyk, P., & Tchistiakov, V. (2017). Monotone optimal binning algorithm
for credit risk modeling. arXiv preprint arXiv:1711.05095.
\item Beltratti, A., Margarita, S., & Terna, P. (1996). Neural networks for economic
and financial modelling. International Thomson Computer Press.
}
}
\author{
Lopes, J. E.
}
