% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{optimal_binning_numerical_fetb}
\alias{optimal_binning_numerical_fetb}
\title{Optimal Binning for Numerical Variables using Fisher's Exact Test (FETB)}
\usage{
optimal_binning_numerical_fetb(
  target,
  feature,
  min_bins = 3L,
  max_bins = 5L,
  bin_cutoff = 0.05,
  max_n_prebins = 20L,
  convergence_threshold = 1e-06,
  max_iterations = 1000L
)
}
\arguments{
\item{target}{A numeric vector of binary target values (0 or 1).}

\item{feature}{A numeric vector of feature values to be binned.}

\item{min_bins}{Minimum number of bins (default: 3).}

\item{max_bins}{Maximum number of bins (default: 5).}

\item{bin_cutoff}{P-value threshold for merging bins (default: 0.05).}

\item{max_n_prebins}{Maximum number of pre-bins before the merging process (default: 20).}

\item{convergence_threshold}{Threshold for algorithmic convergence (default: 1e-6).}

\item{max_iterations}{Maximum number of iterations allowed during merging and monotonicity enforcement (default: 1000).}
}
\value{
A list containing:
\item{bin}{A character vector of bin ranges.}
\item{woe}{A numeric vector of WoE values for each bin.}
\item{iv}{A numeric vector of IV for each bin.}
\item{count}{A numeric vector of total observations in each bin.}
\item{count_pos}{A numeric vector of positive target observations in each bin.}
\item{count_neg}{A numeric vector of negative target observations in each bin.}
\item{cutpoints}{A numeric vector of cut points used to generate the bins.}
\item{converged}{A logical indicating if the algorithm converged.}
\item{iterations}{An integer indicating the number of iterations run.}
}
\description{
This function implements an optimal binning algorithm for numerical variables using Fisher's Exact Test.
It attempts to create an optimal set of bins for a given numerical feature based on its relationship with
a binary target variable, ensuring both statistical significance (via Fisher's Exact Test) and monotonicity in WoE values.
}
\details{
The algorithm works as follows:
\enumerate{
\item Pre-binning: Initially divides the feature into up to \code{max_n_prebins} bins based on sorted values.
\item Fisher Merging: Adjacent bins are merged if the Fisher's Exact Test p-value exceeds \code{bin_cutoff}, indicating no statistically significant difference between them.
\item Monotonicity Enforcement: Ensures the WoE values are monotonic by merging non-monotonic adjacent bins.
\item Final WoE/IV Calculation: After achieving a stable set of bins (or reaching iteration limits), it calculates the final WoE and IV for each bin.
}

The method aims at providing statistically justifiable and monotonic binning, which is particularly useful for credit scoring and other risk modeling tasks.
}
\examples{
\dontrun{
set.seed(123)
target <- sample(0:1, 1000, replace = TRUE)
feature <- rnorm(1000)
result <- optimal_binning_numerical_fetb(target, feature)
print(result$bins)
print(result$woe)
print(result$iv)
}

}
