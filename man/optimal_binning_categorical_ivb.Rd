% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{optimal_binning_categorical_ivb}
\alias{optimal_binning_categorical_ivb}
\title{Binning Categórico Ótimo com Information Value (IVB)}
\usage{
optimal_binning_categorical_ivb(
  target,
  feature,
  min_bins = 3L,
  max_bins = 5L,
  bin_cutoff = 0.05,
  max_n_prebins = 20L
)
}
\arguments{
\item{target}{Vetor inteiro de valores binários do target (0 ou 1).}

\item{feature}{Vetor character ou fator de valores categóricos da feature.}

\item{min_bins}{Número mínimo de bins (padrão: 3).}

\item{max_bins}{Número máximo de bins (padrão: 5).}

\item{bin_cutoff}{Frequência mínima para uma bin separada (padrão: 0.05).}

\item{max_n_prebins}{Número máximo de pre-bins antes do merging (padrão: 20).}
}
\value{
Uma lista com três elementos:
\itemize{
\item woefeature: Vetor numérico de valores WoE para cada valor de feature de entrada.
\item woebin: Data frame com resultados do binning (nomes das bins, WoE, IV, contagens).
\item category_mapping: Vetor nomeado mapeando categorias originais para seus valores de WoE.
}
}
\description{
Implementa binning ótimo para variáveis categóricas usando Information Value (IV)
como critério principal, calculando Weight of Evidence (WoE) e IV para as bins resultantes.
}
\details{
O algoritmo utiliza Information Value (IV) para criar bins ótimos para variáveis categóricas.
Inicia computando estatísticas para cada categoria, depois ordena as categorias por taxa de evento
para garantir monotonicidade. O algoritmo então cria bins iniciais com base nas restrições especificadas
e calcula WoE e IV para cada bin.

Weight of Evidence (WoE) para cada bin é calculado como:
\deqn{WoE_i = \ln(\frac{P(X|Y=1)}{P(X|Y=0)})}

Information Value (IV) para cada bin é calculado como:
\deqn{IV = \sum_{i=1}^{N} (P(X|Y=1) - P(X|Y=0)) \times WoE_i}
}
\examples{
\dontrun{
# Dados de exemplo
target <- c(1, 0, 1, 1, 0, 1, 0, 0, 1, 1)
feature <- c("A", "B", "A", "C", "B", "D", "C", "A", "D", "B")

# Executar o binning ótimo
result <- optimal_binning_categorical_ivb(target, feature, min_bins = 2, max_bins = 4)

# Ver resultados
print(result$woebin)
print(result$woefeature)
print(result$category_mapping)
}

}
