% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{optimal_binning_categorical_ivb}
\alias{optimal_binning_categorical_ivb}
\title{Categorical Optimal Binning with Information Value Binning}
\usage{
optimal_binning_categorical_ivb(
  target,
  feature,
  min_bins = 3L,
  max_bins = 5L,
  bin_cutoff = 0.05,
  max_n_prebins = 20L
)
}
\arguments{
\item{target}{Integer vector of binary target values (0 or 1).}

\item{feature}{Character vector or factor of categorical feature values.}

\item{min_bins}{Minimum number of bins (default: 3).}

\item{max_bins}{Maximum number of bins (default: 5).}

\item{bin_cutoff}{Minimum frequency for a separate bin (default: 0.05).}

\item{max_n_prebins}{Maximum number of pre-bins before merging (default: 20).}
}
\value{
A list with three elements:
\itemize{
\item woefeature: Numeric vector of WoE values for each input feature value.
\item woebin: Data frame with binning results (bin names, WoE, IV, counts).
\item category_mapping: Named vector mapping original categories to their WoE values.
}
}
\description{
Implements optimal binning for categorical variables using Information Value (IV)
as the primary criterion, calculating Weight of Evidence (WoE) and IV for resulting bins.
}
\details{
The algorithm uses Information Value (IV) to create optimal bins for categorical variables.
It starts by computing statistics for each category, then sorts categories by event rate
to ensure monotonicity. The algorithm then creates initial bins based on the specified
constraints and computes WoE and IV for each bin.

Weight of Evidence (WoE) for each bin is calculated as:
\deqn{WoE_i = \ln(\frac{P(X|Y=1)}{P(X|Y=0)})}

Information Value (IV) for each bin is calculated as:
\deqn{IV = \sum_{i=1}^{N} (P(X|Y=1) - P(X|Y=0)) \times WoE_i}
}
\examples{
\dontrun{
# Sample data
target <- c(1, 0, 1, 1, 0, 1, 0, 0, 1, 1)
feature <- c("A", "B", "A", "C", "B", "D", "C", "A", "D", "B")

# Run optimal binning
result <- optimal_binning_categorical_ivb(target, feature, min_bins = 2, max_bins = 4)

# View results
print(result$woebin)
print(result$woefeature)
print(result$category_mapping)
}

}
