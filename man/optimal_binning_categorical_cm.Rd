% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{optimal_binning_categorical_cm}
\alias{optimal_binning_categorical_cm}
\title{Categorical Optimal Binning with Chi-Merge}
\usage{
optimal_binning_categorical_cm(
  target,
  feature,
  min_bins = 3L,
  max_bins = 5L,
  bin_cutoff = 0.05,
  max_n_prebins = 20L
)
}
\arguments{
\item{target}{Integer vector de valores binários do target (0 ou 1).}

\item{feature}{Character vector de valores categóricos da feature.}

\item{min_bins}{Número mínimo de bins (padrão: 3).}

\item{max_bins}{Número máximo de bins (padrão: 5).}

\item{bin_cutoff}{Frequência mínima para uma bin separada (padrão: 0.05).}

\item{max_n_prebins}{Número máximo de pre-bins antes do merging (padrão: 20).}
}
\value{
Uma lista com dois elementos:
\itemize{
\item woefeature: Vetor numérico de valores WoE para cada valor de feature de entrada.
\item woebin: Data frame com resultados do binning (nomes das bins, WoE, IV, contagens).
}
}
\description{
Implements optimal binning for categorical variables using the Chi-Merge algorithm,
calculating Weight of Evidence (WoE) and Information Value (IV) for resulting bins.
}
\details{
O algoritmo Chi-Merge utiliza estatísticas de qui-quadrado para mesclar bins adjacentes:

\deqn{\chi^2 = \sum_{i=1}^{2}\sum_{j=1}^{2} \frac{(O_{ij} - E_{ij})^2}{E_{ij}}}

onde \eqn{O_{ij}} é a frequência observada e \eqn{E_{ij}} é a frequência esperada
para a bin i e classe j.

Weight of Evidence (WoE) para cada bin:

\deqn{WoE = \ln(\frac{P(X|Y=1)}{P(X|Y=0)})}

Information Value (IV) para cada bin:

\deqn{IV = (P(X|Y=1) - P(X|Y=0)) * WoE}

O algoritmo inicializa bins para cada categoria, mescla categorias raras com base
no bin_cutoff, e então itera mesclando bins com o menor qui-quadrado
até atingir max_bins. Determina a direção da monotonicidade com base na
tendência inicial e a impõe, permitindo desvios se as restrições de min_bins
forem acionadas.
}
\examples{
\dontrun{
# Dados de exemplo
target <- c(1, 0, 1, 1, 0, 1, 0, 0, 1, 1)
feature <- c("A", "B", "A", "C", "B", "D", "C", "A", "D", "B")

# Executar o binning ótimo
result <- optimal_binning_categorical_cm(target, feature, min_bins = 2, max_bins = 4)

# Ver resultados
print(result$woebin)
print(result$woefeature)
}

}
