% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{optimal_binning_numerical_oslp}
\alias{optimal_binning_numerical_oslp}
\title{Optimal Binning for Numerical Variables using OSLP}
\usage{
optimal_binning_numerical_oslp(
  target,
  feature,
  min_bins = 3L,
  max_bins = 5L,
  bin_cutoff = 0.05,
  max_n_prebins = 20L,
  convergence_threshold = 0.000001,
  max_iterations = 1000L
)
}
\arguments{
\item{target}{A numeric vector of binary target values (0 or 1).}

\item{feature}{A numeric vector of feature values.}

\item{min_bins}{Minimum number of bins (default: 3, must be >= 2).}

\item{max_bins}{Maximum number of bins (default: 5, must be > min_bins).}

\item{bin_cutoff}{Minimum proportion of total observations for a bin
to avoid being merged (default: 0.05, must be in (0, 1)).}

\item{max_n_prebins}{Maximum number of pre-bins before optimization
(default: 20).}

\item{convergence_threshold}{Threshold for convergence (default: 1e-6).}

\item{max_iterations}{Maximum number of iterations (default: 1000).}
}
\value{
A list containing:
\item{bins}{Character vector of bin labels.}
\item{woe}{Numeric vector of Weight of Evidence (WoE) values for each bin.}
\item{iv}{Numeric vector of Information Value (IV) for each bin.}
\item{count}{Integer vector of total count of observations in each bin.}
\item{count_pos}{Integer vector of positive class count in each bin.}
\item{count_neg}{Integer vector of negative class count in each bin.}
\item{cutpoints}{Numeric vector of cutpoints used to create the bins.}
\item{converged}{Logical value indicating whether the algorithm converged.}
\item{iterations}{Integer value indicating the number of iterations run.}
}
\description{
Performs optimal binning for numerical variables using the Optimal
Supervised Learning Partitioning (OSLP) approach.
}
\examples{
\dontrun{
# Sample data
set.seed(123)
n <- 1000
target <- sample(0:1, n, replace = TRUE)
feature <- rnorm(n)

# Optimal binning
result <- optimal_binning_numerical_oslp(target, feature,
                                         min_bins = 2, max_bins = 4)

# Print results
print(result)
}
}
