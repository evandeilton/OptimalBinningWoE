% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{optimal_binning_categorical_dplc}
\alias{optimal_binning_categorical_dplc}
\title{Binning Ótimo para Variáveis Categóricas usando Programação Dinâmica com Restrições Lineares (Versão Aprimorada)}
\usage{
optimal_binning_categorical_dplc(
  target,
  feature,
  min_bins = 3L,
  max_bins = 5L,
  bin_cutoff = 0.05,
  max_n_prebins = 20L,
  convergence_threshold = 1e-06,
  max_iterations = 1000L,
  bin_separator = "\%;\%"
)
}
\arguments{
\item{target}{Vetor inteiro binário (0 ou 1) do target.}

\item{feature}{Vetor de strings categóricas.}

\item{min_bins}{Número mínimo de bins (default: 3).}

\item{max_bins}{Número máximo de bins (default: 5).}

\item{bin_cutoff}{Proporção mínima para um bin separado (default: 0.05).}

\item{max_n_prebins}{Número máximo de pré-bins antes da mesclagem (default: 20).}

\item{convergence_threshold}{Limite para convergência do algoritmo (default: 1e-6).}

\item{max_iterations}{Número máximo de iterações (default: 1000).}

\item{bin_separator}{Separador para concatenar nomes de categorias em cada bin (default: "\%;\%").}
}
\value{
Uma lista contendo bin, woe, iv, count, count_pos, count_neg, converged e iterations.
}
\description{
Este código implementa o binning ótimo para variáveis categóricas utilizando programação dinâmica,
impondo restrições lineares e buscando maximizar o IV (Information Value). O algoritmo:
\enumerate{
\item Pré-processa dados, unindo categorias raras.
\item Ordena categorias por taxas de evento.
\item Aplica programação dinâmica para encontrar a solução ótima em termos de IV.
\item Impõe monotonicidade quando possível.
\item Retorna bins finais com WoE e IV calculados.
}

As melhorias incluem:
\itemize{
\item Organização e clareza do código.
\item Comentários detalhados.
\item Uso de funções inline e estruturas de dados eficientes.
\item Redução de cópias desnecessárias.
\item Maior robustez na validação e no tratamento de exceções.
}
}
\examples{
\dontrun{
set.seed(123)
n <- 1000
target <- sample(0:1, n, replace = TRUE)
feature <- sample(c("A", "B", "C", "D", "E"), n, replace = TRUE)
result <- optimal_binning_categorical_dplc(target, feature, min_bins = 2, max_bins = 4)
print(result)
}

}
