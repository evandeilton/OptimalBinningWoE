% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{optimal_binning_categorical_sblp}
\alias{optimal_binning_categorical_sblp}
\title{Optimal Binning for Categorical Variables using Similarity-Based Logistic Partitioning (SBLP)}
\usage{
optimal_binning_categorical_sblp(
  target,
  feature,
  min_bins = 3L,
  max_bins = 5L,
  bin_cutoff = 0.05,
  max_n_prebins = 20L,
  convergence_threshold = 0.000001,
  max_iterations = 1000L,
  bin_separator = ";"
)
}
\arguments{
\item{target}{An integer vector of binary target values (0 or 1).}

\item{feature}{A character vector of categorical feature values.}

\item{min_bins}{Minimum number of bins (default: 3).}

\item{max_bins}{Maximum number of bins (default: 5).}

\item{bin_cutoff}{Minimum frequency for a category to be considered as a separate bin (default: 0.05).}

\item{max_n_prebins}{Maximum number of pre-bins before merging (default: 20).}

\item{convergence_threshold}{Threshold for convergence of the algorithm (default: 1e-6).}

\item{max_iterations}{Maximum number of iterations for the algorithm (default: 1000).}

\item{bin_separator}{Separator used for merging category names (default: ";").}
}
\value{
A list containing the following elements:
\itemize{
\item bins: A character vector of bin labels
\item woe: A numeric vector of Weight of Evidence values for each bin
\item iv: A numeric vector of Information Values for each bin
\item count: An integer vector of total counts for each bin
\item count_pos: An integer vector of positive class counts for each bin
\item count_neg: An integer vector of negative class counts for each bin
\item converged: A logical value indicating whether the algorithm converged
\item iterations: An integer value indicating the number of iterations performed
}
}
\description{
This function performs optimal binning for categorical variables using a Similarity-Based Logistic Partitioning (SBLP) approach,
which combines Weight of Evidence (WOE) and Information Value (IV) methods with a similarity-based merging strategy.
}
\details{
The algorithm performs the following steps:
\enumerate{
\item Validate input parameters
\item Compute initial counts and target rates for each category
\item Handle rare categories by merging them based on similarity in target rates
\item Ensure the number of pre-bins does not exceed max_n_prebins
\item Sort categories based on their target rates
\item Perform iterative binning using dynamic programming
\item Enforce monotonicity in the final binning if possible
\item Calculate final statistics for each bin
}

The Weight of Evidence (WOE) is calculated as:
\deqn{WOE = \ln(\frac{\text{Proportion of Events}}{\text{Proportion of Non-Events}})}

The Information Value (IV) for each bin is calculated as:
\deqn{IV = (\text{Proportion of Events} - \text{Proportion of Non-Events}) \times WOE}
}
\examples{
\dontrun{
# Create sample data
set.seed(123)
target <- sample(0:1, 1000, replace = TRUE)
feature <- sample(LETTERS[1:5], 1000, replace = TRUE)

# Run optimal binning
result <- optimal_binning_categorical_sblp(target, feature)

# View results
print(result)
}

}
