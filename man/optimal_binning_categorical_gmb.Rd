% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{optimal_binning_categorical_gmb}
\alias{optimal_binning_categorical_gmb}
\title{Binning Ótimo para Variáveis Categóricas usando Abordagem Gulosa (Versão Aprimorada)}
\usage{
optimal_binning_categorical_gmb(
  target,
  feature,
  min_bins = 3L,
  max_bins = 5L,
  bin_cutoff = 0.05,
  max_n_prebins = 20L,
  bin_separator = "\%;\%",
  convergence_threshold = 1e-06,
  max_iterations = 1000L
)
}
\arguments{
\item{target}{Vetor inteiro binário (0 ou 1) da variável resposta.}

\item{feature}{Vetor de caracteres com valores categóricos da variável explicativa.}

\item{min_bins}{Número mínimo de bins (default: 3).}

\item{max_bins}{Número máximo de bins (default: 5).}

\item{bin_cutoff}{Frequência mínima para um bin separado (default: 0.05).}

\item{max_n_prebins}{Número máximo de pré-bins antes da fusão (default: 20).}

\item{bin_separator}{Separador de categorias no nome do bin (default: "\%;\%").}

\item{convergence_threshold}{Limite de convergência para a variação de IV (default: 1e-6).}

\item{max_iterations}{Número máximo de iterações (default: 1000).}
}
\value{
Uma lista contendo:
\itemize{
\item bin: Vetor de strings com os nomes dos bins.
\item woe: Vetor numérico com o WoE de cada bin.
\item iv: Vetor numérico com o IV de cada bin.
\item count: Contagem total em cada bin.
\item count_pos: Contagem de casos positivos em cada bin.
\item count_neg: Contagem de casos negativos em cada bin.
\item converged: Booleano indicando se o algoritmo convergiu.
\item iterations: Número de iterações executadas.
}
}
\description{
Este código implementa o binning ótimo para variáveis categóricas usando uma abordagem de mesclagem gulosa (Greedy Merge Binning),
calculando WoE e IV. Foi aperfeiçoado para maior robustez, estabilidade numérica e para lidar com casos extremos de forma mais consistente.

Melhorias sugeridas pelo "especialista jedi":
\enumerate{
\item Tratamento mais rigoroso de inputs, incluindo checagem de valores ausentes.
\item Uso de epsilon e verificações para evitar log(0) e divisão por zero, garantindo maior estabilidade numérica.
\item Comentários adicionais e refatoração para tornar o código mais legível e de fácil manutenção.
\item Maior cuidado ao mesclar bins para evitar bins vazios ou malformados.
\item Mecanismos para detectar cenários de falha na convergência, avisando ao usuário.
\item Pré-alocação de vetores para evitar realocações frequentes, sempre que possível.
\item Log de progresso/erros (utilizando avisos do Rcpp::warning, caso seja necessário).
}
}
\details{
O algoritmo:
\enumerate{
\item Cria um bin para cada categoria única, classificando-os pelo ratio de positivos.
\item Mescla categorias raras (frequência < bin_cutoff) em um bin próprio para manter estabilidade.
\item Executa mesclas gulosas de bins adjacentes que maximizam o IV total.
\item Para quando atinge min_bins, max_bins ou convergência do IV.
\item Impõe monotonicidade do WoE, se necessário, fundindo bins violadores da monotonicidade.
}
}
\examples{
\dontrun{
# Exemplo
target <- c(1, 0, 1, 1, 0, 1, 0, 0, 1, 1)
feature <- c("A", "B", "A", "C", "B", "D", "C", "A", "D", "B")
result <- optimal_binning_categorical_gmb(target, feature, min_bins = 2, max_bins = 4)
print(result)
}

}
\references{
\itemize{
\item Beltrami, M., Mach, M., & Dall'Aglio, M. (2021). "Monotonic Optimal Binning Algorithm for Credit Risk Modeling." Risks, 9(3), 58.
\item Siddiqi, N. (2006). Credit risk scorecards: developing and implementing intelligent credit scoring. John Wiley & Sons.
}
}
