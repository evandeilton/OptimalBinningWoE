% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{OptimalBinningNumericPAVA}
\alias{OptimalBinningNumericPAVA}
\title{Performs optimal binning of a numeric variable for Weight of Evidence (WoE) and Information Value (IV) using the Pool Adjacent Violators Algorithm (PAVA) to enforce monotonicity}
\usage{
OptimalBinningNumericPAVA(
  target,
  feature,
  max_bins = 7L,
  bin_cutoff = 0.05,
  min_bads = 0.05,
  max_n_prebins = 20L,
  monotonicity_direction = "increase"
)
}
\arguments{
\item{target}{Integer vector representing the binary target variable, where 1 indicates a positive event (e.g., default) and 0 indicates a negative event (e.g., non-default).}

\item{feature}{Numeric vector representing the numeric variable to be binned.}

\item{max_bins}{(Optional) Maximum number of bins to generate. Default is 7.}

\item{bin_cutoff}{(Optional) Cutoff value that determines the frequency of values to define pre-bins. Default is 0.05.}

\item{min_bads}{(Optional) Minimum proportion of bad events (positive target events) that a bin must contain. Default is 0.05.}

\item{max_n_prebins}{(Optional) Maximum number of pre-bins to consider before final binning. Default is 20.}

\item{monotonicity_direction}{(Optional) String that defines the monotonicity direction of event rates, either "increase" for increasing monotonicity or "decrease" for decreasing monotonicity. Default is "increase".}
}
\value{
A list with the following elements:
\itemize{
\item \code{feature_woe}: Numeric vector with the WoE assigned to each instance of the processed numeric variable.
\item \code{bin}: DataFrame with the generated bins, containing the following fields:
\itemize{
\item \code{bin}: String representing the range of values for each bin.
\item \code{woe}: Weight of Evidence (WoE) for each bin.
\item \code{iv}: Information Value (IV) for each bin.
\item \code{count}: Total number of observations in each bin.
\item \code{count_pos}: Count of positive events in each bin.
\item \code{count_neg}: Count of negative events in each bin.
}
\item \code{woe}: Numeric vector with the WoE for each bin.
\item \code{iv}: Total Information Value (IV) calculated for the variable.
\item \code{pos}: Vector with the count of positive events in each bin.
\item \code{neg}: Vector with the count of negative events in each bin.
}
}
\description{
This function processes a numeric variable by removing missing values and creating pre-bins based on unique values. It then applies the Pool Adjacent Violators Algorithm (PAVA) to ensure the monotonicity of event rates, either increasing or decreasing based on the specified direction. The function respects the minimum number of bad events (\code{min_bads}) per bin and calculates WoE and IV for the generated bins.
}
