% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{optimal_binning_numerical_sketch}
\alias{optimal_binning_numerical_sketch}
\title{Optimal Binning for Numerical Variables using Sketch-based Algorithm}
\usage{
optimal_binning_numerical_sketch(
  target,
  feature,
  min_bins = 3L,
  max_bins = 5L,
  bin_cutoff = 0.05,
  special_codes = "",
  monotonic = TRUE,
  convergence_threshold = 1e-06,
  max_iterations = 1000L,
  sketch_k = 200L
)
}
\arguments{
\item{target}{An integer vector of binary target values (0 or 1).}

\item{feature}{A numeric vector of feature values.}

\item{min_bins}{Minimum number of bins (default: 3).}

\item{max_bins}{Maximum number of bins (default: 5).}

\item{bin_cutoff}{Minimum frequency for a bin (default: 0.05).}

\item{special_codes}{String with special codes to be treated separately, separated by comma (default: "").}

\item{monotonic}{Whether to enforce monotonicity of WOE across bins (default: TRUE).}

\item{convergence_threshold}{Threshold for convergence in optimization (default: 1e-6).}

\item{max_iterations}{Maximum number of iterations for optimization (default: 1000).}

\item{sketch_k}{Parameter controlling the accuracy of the KLL sketch (default: 200).}
}
\value{
A list containing:
\itemize{
\item id: Numeric identifiers for each bin
\item bin_lower: Lower bounds of bins
\item bin_upper: Upper bounds of bins
\item woe: Weight of Evidence for each bin
\item iv: Information Value for each bin
\item count: Total counts for each bin
\item count_pos: Positive target counts for each bin
\item count_neg: Negative target counts for each bin
\item cutpoints: Selected cutting points between bins
\item converged: Logical value indicating whether the algorithm converged
\item iterations: Number of iterations run
}
}
\description{
This function performs optimal binning for numerical variables using a sketch-based approach,
combining KLL Sketch for quantile approximation with Weight of Evidence (WOE) and
Information Value (IV) methods.
}
\details{
The algorithm uses a KLL (Karnin-Lang-Liberty) Sketch data structure to efficiently approximate
the quantiles of numerical data, making it suitable for very large datasets or streaming scenarios.
The sketch-based approach allows processing data in a single pass with sublinear memory usage.

The algorithm performs the following steps:
\enumerate{
\item Input validation and preprocessing
\item Building a KLL sketch for the data
\item Extracting candidate cutpoints from the sketch
\item Selecting optimal cutpoints using either dynamic programming (for smaller datasets)
or a greedy approach based on Information Value
\item Enforcing minimum bin size (bin_cutoff)
\item Calculating initial Weight of Evidence (WOE) and Information Value (IV)
\item Enforcing monotonicity of WOE across bins (if requested)
\item Optimizing the number of bins through iterative merging
}
}
\examples{
\dontrun{
# Create sample data
set.seed(123)
target <- sample(0:1, 1000, replace = TRUE)
feature <- rnorm(1000)

# Run optimal binning with sketch
result <- optimal_binning_numerical_sketch(feature, target)

# View results
print(result)
}
}
