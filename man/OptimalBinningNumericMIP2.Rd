% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/OptimalBinningR.R
\name{OptimalBinningNumericMIP2}
\alias{OptimalBinningNumericMIP2}
\title{Optimal Binning for Numeric Variables using Mixed-Integer Programming}
\usage{
OptimalBinningNumericMIP2(
  target,
  feature,
  min_bins = 2,
  max_bins = 7,
  bin_cutoff = 0.05,
  max_n_prebins = 20
)
}
\arguments{
\item{target}{A numeric vector of binary target values (0 or 1).}

\item{feature}{A numeric vector of feature values to be binned.}

\item{min_bins}{Minimum number of bins to create (default is 2).}

\item{max_bins}{Maximum number of bins to create (default is 7).}

\item{bin_cutoff}{Minimum proportion of observations in each bin (default is 0.05).}

\item{max_n_prebins}{Maximum number of pre-bins to use (default is 20).}
}
\value{
A list containing two elements:
\item{woefeature}{A data.table with WoE values mapped to original feature values.}
\item{woebin}{A data.table with bin information, including bin boundaries, WoE, IV, and counts.}
}
\description{
This function performs optimal binning of a numeric variable for Weight of Evidence (WoE)
and Information Value (IV) calculation using a Mixed-Integer Programming (MIP) approach.
It ensures monotonicity of WoE across bins and optimizes the number of bins.
}
\examples{
\dontrun{
# Generate sample data
set.seed(42)
n <- 1000
feature <- rnorm(n)
target <- rbinom(n, 1, 1 / (1 + exp(-0.5 - 0.5 * feature)))

# Perform optimal binning
result <- OptimalBinningNumericMIP2(target, feature, min_bins = 3, max_bins = 5)

# View results
print(result$woebin)
summary(result$woefeature$woefeature)
}

}
