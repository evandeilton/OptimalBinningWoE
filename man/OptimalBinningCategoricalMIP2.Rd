% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/OptimalBinningR.R
\name{OptimalBinningCategoricalMIP2}
\alias{OptimalBinningCategoricalMIP2}
\title{Optimal Binning for Categorical Variables using Mixed-Integer Programming}
\usage{
OptimalBinningCategoricalMIP2(
  target,
  feature,
  min_bins = 2,
  max_bins = 10,
  bin_cutoff = 0.05
)
}
\arguments{
\item{target}{A numeric vector of binary target values (0 or 1).}

\item{feature}{A factor or character vector of categorical feature values to be binned.}

\item{min_bins}{Minimum number of bins to create (default is 2).}

\item{max_bins}{Maximum number of bins to create (default is 10).}

\item{bin_cutoff}{Minimum proportion of observations in each bin (default is 0.05).}
}
\value{
A list containing two elements:
\item{woefeature}{A data.table with WoE values mapped to original feature values.}
\item{woebin}{A data.table with bin information, including grouped categories, WoE, IV, and counts.}
}
\description{
This function performs optimal binning of a categorical variable for Weight of Evidence (WoE)
and Information Value (IV) calculation using a Mixed-Integer Programming (MIP) approach.
It groups categories to maximize the total IV while respecting the minimum and maximum
number of groups. This version is optimized for use with data.table for improved performance.
}
\examples{
\dontrun{
library(data.table)

# Generate sample data
set.seed(42)
n <- 1000
categories <- c("A", "B", "C", "D", "E")
dt <- data.table(
  feature = sample(categories, n, replace = TRUE),
  target = rbinom(n, 1, 0.3 + 0.1 * (as.integer(factor(sample(categories, n, replace = TRUE))) - 1))
)

# Perform optimal binning
result <- OptimalBinningCategoricalMIP2(dt$target, dt$feature, min_bins = 2, max_bins = 4)

# View results
print(result$woebin)
summary(result$woefeature$woefeature)
}

}
