% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{optimal_binning_numerical_ewb}
\alias{optimal_binning_numerical_ewb}
\title{Optimal Binning for Numerical Variables using Equal-Width Binning}
\usage{
optimal_binning_numerical_ewb(
  target,
  feature,
  min_bins = 3L,
  max_bins = 5L,
  bin_cutoff = 0.05,
  max_n_prebins = 20L,
  convergence_threshold = 1e-06,
  max_iterations = 1000L
)
}
\arguments{
\item{target}{An integer vector of binary target values (0 or 1).}

\item{feature}{A numeric vector of feature values to be binned.}

\item{min_bins}{Minimum number of bins (default: 3).}

\item{max_bins}{Maximum number of bins (default: 5).}

\item{bin_cutoff}{Minimum fraction of total observations in each bin (default: 0.05).}

\item{max_n_prebins}{Maximum number of pre-bins (default: 20).}

\item{convergence_threshold}{Convergence threshold for the algorithm (default: 1e-6).}

\item{max_iterations}{Maximum number of iterations allowed (default: 1000).}
}
\value{
A list containing:
\item{bins}{Character vector of bin ranges.}
\item{woe}{Numeric vector of WoE values for each bin.}
\item{iv}{Numeric vector of Information Value (IV) for each bin.}
\item{count}{Numeric vector of total observations in each bin.}
\item{count_pos}{Numeric vector of positive target observations in each bin.}
\item{count_neg}{Numeric vector of negative target observations in each bin.}
\item{cutpoints}{Numeric vector of cut points to generate the bins.}
\item{converged}{Logical indicating if the algorithm converged.}
\item{iterations}{Integer number of iterations run by the algorithm.}
}
\description{
Performs optimal binning for numerical variables using an Equal-Width Binning approach with subsequent merging and adjustment. It aims to find a good binning strategy that balances interpretability and predictive power.
}
\details{
The optimal binning algorithm using Equal-Width Binning consists of several steps:
\enumerate{
\item Initial binning: The feature range is divided into \code{max_n_prebins} bins of equal width.
\item Assign data to bins based on feature values.
\item Merge rare bins: Bins with a fraction of observations less than \code{bin_cutoff} are merged with adjacent bins.
\item Enforce monotonicity of WoE values by merging adjacent non-monotonic bins.
\item Adjust the number of bins to not exceed \code{max_bins} by merging bins with the smallest counts.
\item Calculate WoE and IV for each bin.
}

The algorithm aims to create bins that maximize the predictive power of the numerical variable while adhering to the specified constraints. It enforces monotonicity of WoE values, which is particularly useful for credit scoring and risk modeling applications.
}
\examples{
set.seed(123)
target <- sample(0:1, 1000, replace = TRUE)
feature <- rnorm(1000)
result <- optimal_binning_numerical_ewb(target, feature)
print(result)

}
