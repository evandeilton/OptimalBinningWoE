% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{optimal_binning_categorical_udt}
\alias{optimal_binning_categorical_udt}
\title{Optimal Binning for Categorical Variables using Unsupervised Decision Tree (UDT)}
\usage{
optimal_binning_categorical_udt(
  target,
  feature,
  min_bins = 3L,
  max_bins = 5L,
  bin_cutoff = 0.05,
  max_n_prebins = 20L,
  bin_separator = "\%;\%",
  convergence_threshold = 1e-06,
  max_iterations = 1000L
)
}
\arguments{
\item{target}{An integer vector of binary target values (0 or 1).}

\item{feature}{A character vector of categorical feature values.}

\item{min_bins}{Minimum number of bins (default: 3).}

\item{max_bins}{Maximum number of bins (default: 5).}

\item{bin_cutoff}{Minimum frequency for a category to be considered as a separate bin (default: 0.05).}

\item{max_n_prebins}{Maximum number of pre-bins before merging (default: 20).}

\item{bin_separator}{Separator used for merging category names (default: "\%;\%").}

\item{convergence_threshold}{Threshold for convergence of the algorithm (default: 1e-6).}

\item{max_iterations}{Maximum number of iterations for the algorithm (default: 1000).}
}
\value{
A list containing bin information:
\item{bins}{A character vector of bin labels}
\item{woe}{A numeric vector of WOE values for each bin}
\item{iv}{A numeric vector of IV values for each bin}
\item{count}{An integer vector of total counts for each bin}
\item{count_pos}{An integer vector of positive target counts for each bin}
\item{count_neg}{An integer vector of negative target counts for each bin}
\item{converged}{A logical indicating whether the algorithm converged}
\item{iterations}{An integer indicating the number of iterations run}
}
\description{
This function performs optimal binning for categorical variables using an Unsupervised Decision Tree (UDT) approach,
which combines Weight of Evidence (WOE) and Information Value (IV) methods.
}
\details{
The algorithm performs the following steps:
\enumerate{
\item Input validation and preprocessing
\item Initial binning based on unique categories
\item Merge bins to respect max_n_prebins
\item Iterative merging of bins based on minimum IV difference
\item Ensure monotonicity of WOE values across bins (if possible)
\item Respect min_bins and max_bins constraints
}

The Weight of Evidence (WOE) is calculated as:

WOE = ln((Distribution of Good) / (Distribution of Bad))

The Information Value (IV) for each bin is calculated as:

IV = (Distribution of Good - Distribution of Bad) * WOE

The algorithm aims to find an optimal binning solution while respecting the specified constraints.
It uses a convergence threshold and maximum number of iterations to ensure stability and prevent infinite loops.
}
\examples{
\dontrun{
# Create sample data
set.seed(123)
target <- sample(0:1, 1000, replace = TRUE)
feature <- sample(LETTERS[1:5], 1000, replace = TRUE)

# Run optimal binning
result <- optimal_binning_categorical_udt(target, feature)

# View results
print(result)
}

}
\references{
\itemize{
\item Saleem, S. M., & Jain, A. K. (2017). A comprehensive review of supervised binning techniques for credit scoring. Journal of Risk Model Validation, 11(3), 1-35.
\item Thomas, L. C., Edelman, D. B., & Crook, J. N. (2002). Credit scoring and its applications. SIAM.
}
}
